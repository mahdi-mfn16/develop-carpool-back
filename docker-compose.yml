version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
#    container_name: app

    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/html/subscription_sync
    networks:
      - app-network
    volumes:
       - ./:/var/www/html/subscription_sync
       - ./docker_setting/php/local.ini:/usr/local/etc/php/conf.d/local.ini
       - ./docker_setting/php/www.conf:/usr/local/etc/php-fpm.d/www.conf

  #Nginx Service
  webserver:
    image: nginx
#    container_name: webserver
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    tty: true
    ports:
      - "${LARAVEL_BACKEND_PROJECT_PORT}:80"
      # - "8004:80"
#      - "80:80"
    #  - "443:443"
    networks:
      - app-network
    volumes:
      - ./:/var/www/html/subscription_sync
      - ./docker_setting/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker_setting/nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./docker_setting/nginx/security/limits.d/laravel-echo.conf:/etc/security/limits.d/laravel-echo.conf

     #Scheduler
  scheduler:
    image: digitalocean.com/php
    command: ./docker_setting/bin/run-scheduler.sh
#    container_name: crypto_propiy_scheduler
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    depends_on:
      - app
    working_dir: /var/www/html/subscription_sync
    volumes:
      - ./:/var/www/html/subscription_sync
      - ./docker_setting/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker_setting/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - app-network

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: ${DB_DATABASE}
      # MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"





#Docker Networks
networks:
  # soketi_app-network:
  #   external: true
  app-network:
    driver: bridge


#Volumes
volumes:
  dbdata:
    driver: local
